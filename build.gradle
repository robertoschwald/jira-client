buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

apply plugin: "java"
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

group = "com.symentis"
version = "0.7.5-RELEASE"

description = """A simple JIRA REST client"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
        
     maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
     maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    implementation "org.apache.httpcomponents:httpclient:4.5.10"
    implementation "org.apache.httpcomponents:httpmime:4.5.10"
    implementation "org.apache.commons:commons-lang3:3.8"
    implementation group: "net.sf.json-lib", name: "json-lib", version:"2.4", classifier:"jdk15"
    implementation "joda-time:joda-time:2.3"
    implementation "org.scribe:scribe:1.3.7"

    testImplementation "junit:junit:4.12"
    testImplementation "org.powermock:powermock-module-junit4:1.6.3"
    testImplementation "org.powermock:powermock-api-mockito:1.6.3"
    testImplementation "org.codehaus.groovy:groovy-all:2.4.6"
}

configurations {
    published // for artifactory javadocs / sources publishing
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifactoryPublish {
    dependsOn sourcesJar, javadocJar
}

// Add the sourceJar / javadocJar to non-extractor modules. You must add "published" config to artifactory defaults { "publishConfigs" }
artifacts {
    published sourcesJar
    published javadocJar
}

artifactory {
    publish {
        repository {
            // ~/.gradle/gradle.properties
            contextUrl = "${artifactoryUrl}"
            username = "${artifactoryUser}"
            password = "${artifactoryPassword}"
            repoKey = project.version.contains("SNAPSHOT") ? 'libs-snapshot-local' : "libs-releases-local"
            maven = true
        }
        defaults {
            publishConfigs('archives', 'published')
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
